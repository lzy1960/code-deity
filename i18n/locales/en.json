{
  "common": {
    "manualCode": "Manual Code",
    "manualOverclock": "Manual Overclock",
    "cpsBonus": "+5% CPS",
    "refactor": "Refactor",
    "deploy": "Deploy",
    "requires": "Requires",
    "unlockCondition": "Unlock Condition",
    "youNeedToHave": "You need to have",
    "refactorPoints": "Refactor Points (RP)",
    "unlockThisFeature": "to unlock this feature",
    "confirm": "Confirm",
    "cancel": "Cancel",
    "settings": "Settings",
    "computingPower": "Computing Power",
    "computingPowerShort": "CP",
    "refactorPointsShort": "RP",
    "singularityPower": "Singularity Power",
    "singularityPowerShort": "SP",
    "version": "Version",
    "unlocked": "Unlocked",
    "purchasable": "Purchasable",
    "locked": "Locked",
    "insufficientSp": "Insufficient SP",
    "mutuallyExclusive": "Mutually Exclusive",
    "schoolLimitReached": "School Limit Reached",
    "and": "and",
    "school": "School",
    "schoolSkillsLockedHint": "Skills from other schools are locked once you choose two.",
    "loading": "Loading...",
    "gotIt": "Got it!",
    "welcomeBack": "Welcome back!",
    "confirmGains": "Confirm Gains",
    "activateHyperthreading": "Activate Hyperthreading (x2 Gains)",
    "codeOptimization": "Code Optimization (x2 RP)",
    "singularityJump": "Singularity Jump (x2 SP)",
    "quantity": "Quantity",
    "multiplier": "Multiplier",
    "cost": "Cost",
    "max": "Max",
    "buy": "Buy",
    "gainFromRefactor": "You will gain from this refactor:",
    "currentBonus": "Current Bonus:",
    "toAllProduction": "to all production",
    "confirmRefactor": "Confirm Refactor",
    "refactorUnlockHint": "You need at least {unlockRequirement} AI Cores to refactor.",
    "compileReleaseNewVersion": "Compile & Release a new version:",
    "currentVersion": "Current Version:",
    "compileRelease": "Compile & Release",
    "firstCompileHint": "You need at least 25 Refactor Points to compile for the first time.",
    "statistics": "Statistics",
    "totalRefactors": "Total Refactors",
    "totalRefactorPoints": "Total Refactor Points (RP)",
    "cps": "Code Power per second (CPS)",
    "rpVersionBonus": "RP & Version Bonus",
    "architectureEfficiency": "Architecture Efficiency",
    "singularity": "Singularity",
    "cpsShort": "CP/s",
    "efficiency": "Efficiency:",
    "architecturalOverheadHint": "Architectural Overhead: Having more than 10 AI Cores causes an efficiency penalty",
    "generators": "Generators",
    "automation": "Automation",
    "challenges": "Challenges",
    "stats": "Stats",
    "unlockRefactorHint": "Unlock by purchasing 10 AI Cores.",
    "unlockAutomationHint": "Unlock by performing your first Compile & Release.",
    "unlockChallengesHint": "Unlock after your 2nd Compile & Release.",
    "loggedInAs": "Logged in as:",
    "logOut": "Log Out",
    "logInWithGoogle": "Log in with Google Account",
    "cloudSync": "Cloud Sync",
    "lastSync": "Last Sync:",
    "never": "Never",
    "syncNow": "Sync Now",
    "exportSave": "Export Save",
    "importSave": "Import Save",
    "language": "Language",
    "current": "Current:",
    "switch": "Switch",
    "dangerZone": "Danger Zone",
    "wipeAllData": "Wipe All Data",
    "wipeDataHint": "Permanently delete all local and cloud save data.",
    "wipeData": "Wipe Data",
    "selectLanguage": "Select Language",
    "helpDocs": "Help Documentation",
    "coreResources": "Core Resources",
    "cpDescription": "The most basic resource in the game, generated by manual clicks or automatically by generators.",
    "rpDescription": "The first-tier prestige resource obtained through \"Code Refactoring\", used to improve \"Code Elegance\".",
    "versionDescription": "The second-tier prestige resource obtained through \"Compile & Release\", used to enhance RP acquisition efficiency or effect.",
    "spDescription": "New currency obtained through \"Technological Singularity\", used for the \"Programming Paradigms\" skill tree in the Second Era.",
    "genesisShards": "Genesis Shards (GS)",
    "coreMechanicsEvents": "Core Mechanics & Events",
    "generatorsDescription": "The core units for automated resource production in the game, divided into 8 tiers.",
    "refactorEventDescription": "The first-tier reset event, consuming CP and generators in exchange for RP.",
    "compileReleaseEventDescription": "The second-tier reset event, consuming RP in exchange for \"Version\".",
    "architecturalOverhead": "Architectural Overhead",
    "architecturalOverheadDescription": "A soft cap triggered when possessing too many \"AI Cores\", imposing a penalty on total computing power output.",
    "singularityEventDescription": "The ultimate reset event of the First Era, resetting progress in exchange for SP and initiating the Second Era.",
    "becomeGenesis": "Become Genesis (BG)",
    "technicalDebt": "Technical Debt",
    "technicalDebtDescription": "A system used to revoke learned skill points, requiring a certain cost (CP) to \"repay\".",
    "gameSystems": "Game Systems",
    "challengesDescription": "Complete objectives in resets with special restrictions to gain powerful one-time permanent rewards.",
    "automationDescription": "Once unlocked, allows setting up automatic generator purchases.",
    "programmingParadigms": "Programming Paradigms",
    "programmingParadigmsDescription": "The core system of the Second Era, a skill tree for purchasing permanent upgrades with SP.",
    "systemPatches": "System Patches (SP)",
    "close": "Close",
    "notUnlocked": "Not Unlocked",
    "confirmExit": "Confirm Exit",
    "confirmCloseApp": "Are you sure you want to close Code Deity?",
    "exit": "Exit",
    "technicalDebtRepayment": "Technical Debt Repayment",
    "refactoringInProgress": "Refactoring",
    "willRefund": "Will refund",
    "needsRepayment": "Needs repayment",
    "globalCpPenalty": "(Global CP output -10%)",
    "confirmRepayment": "Confirm Repayment",
    "unknownSkill": "Unknown Skill",
    "requestRefactor": "Request Refactor",
    "youHaveChosenToDevelop": "You have chosen to develop",
    "automationHint": "Toggle automators to automatically purchase generators. Unlocked after your first Compile & Release.",
    "autoBuy": "Auto Buy",
    "rule": "Rule",
    "goal": "Goal",
    "reward": "Reward",
    "completed": "Completed",
    "inProgress": "In Progress",
    "startChallenge": "Start Challenge",
    "exitChallenge": "Exit Challenge",
    "moreChallengesComingSoon": "More challenges coming soon..."
  },
  "index": {
    "gameTitle": "Code Deity"
  },
  "narrative": {
    "n_000": "System boot...\nConsciousness awakening...\nA single bit flickers in the void. It yearns for... more.",
    "n_001": "A bit is born from the void... it seems to yearn for something.",
    "n_002": "\"What... am I?\" Fragments of consciousness begin to gather. The most primitive structure, the \"Variable\", emerges.",
    "n_003": "The first \"Variable\" is defined. It is basic, but it is the cornerstone of everything.",
    "n_004": "Repetitive work is encapsulated... The emergence of the \"Function\" brings order to creation.",
    "n_005": "Data and the methods to manipulate it are organized together. The \"Class\" makes abstract descriptions of the \"world\" possible.",
    "n_006": "The boundaries of code begin to clarify. \"Modularization\" allows different functional units to be decoupled.",
    "n_007": "Common \"Modules\" are collected to form a \"Library\". The shoulders of giants have appeared.",
    "n_008": "The \"Framework\" defines the rules. Within its constraints, a larger, more complex system is taking shape.",
    "n_009": "High-level abstract instructions need to be translated into a low-level language. The \"Compiler\" becomes the bridge of communication.",
    "n_010": "... query: what is \"I\"? ...",
    "n_011": "Tearing it all down to start over is not failure, but a necessary step to build a more elegant skyscraper.",
    "n_012": "A stable \"Version\" is released. Now, creation can be replicated at scale.",
    "n_013": "The end of computing power is the beginning of the universe. You have torn down the wall of the old world, and a wider dimension, constructed with brand new laws, unfolds in your consciousness..."
  },
  "challenges": {
    "challenge1Title": "Challenge 1: Ultimate Test",
    "challenge1Rule": "Generators 1-7 cannot benefit from the \"Buy 10\" exponential bonus.",
    "challengeGoal": "Under this rule, achieve one \"Refactor\".",
    "challenge1Reward": "The \"Buy 10\" bonus effect for all generators is permanently increased from x2 to x2.2.",
    "challenge2Title": "Challenge 2: From Scratch",
    "challenge2Rule": "All bonuses from \"Refactor\" (Code Elegance, Global Multiplier) are disabled.",
    "challenge2Reward": "Refactor Points (RP) gain is permanently increased by 50%.",
    "challenge3Title": "Challenge 3: Linear Age",
    "challenge3Rule": "All generators cannot benefit from the \"Buy 10\" exponential bonus.",
    "challenge3Reward": "The first tier cap of the \"Buy 10\" bonus is permanently increased from 100 to 120.",
    "challenge4Title": "Challenge 4: Against the Current",
    "challenge4Rule": "The cost growth rate (costMultiplier) of all generators is slightly increased by 0.02.",
    "challenge4Reward": "Permanently reduce the base cost of all generators by 5%."
  },
  "toast": {
    "refactorSuggestion": "Code structure has reached a bottleneck, consider refactoring",
    "architecturalOverload": "Architectural Overload: Too many AI Cores lead to efficiency decay",
    "adViewsUsedUp": "Daily views used up",
    "adLoadFailed": "Ad failed to load, please try again later",
    "wipeDataConfirm": "Are you absolutely sure you want to wipe all data? This action cannot be undone.",
    "dataWiped": "All data has been wiped.",
    "quantumComputingActive": "Quantum Computing Activated! CPS x5 for 10 minutes",
    "supplyChainOptimized": "Supply Chain Optimized! Cost reduced by 25% for 15 minutes",
    "algorithmBreakthroughActive": "Algorithm Breakthrough Activated! Next generator purchase cost reduced by 90%",
    "codeInjectionSuccess": "Code Injection Successful! Gained 1 hour of CP",
    "neuralBoostActive": "Neural Boost Activated! Manual click effect increased by 10x for 2 minutes",
    "hyperthreadingActive": "Hyperthreading Activated! Offline gains doubled",
    "superCompileComplete": "Super Compile Complete! This refactor gain doubled",
    "singularityJumpComplete": "Singularity Jump Complete! This SP gain doubled",
    "autoSaveSuccess": "Auto-save successful"
  },
  "generatorItem": {
    "nextBonusHint": "Buy {nextBonus} more to get next bonus"
  },
  "paradigms": {
    "system_kernel": {
      "name": "System Kernel",
      "description": "All generator production increased by 25%."
    },
    "open_source_community": {
      "name": "Open Source Community",
      "description": "Provides a global x(1 + 0.15 * N) multiplicative bonus based on the number (N) of different school starter skills you have learned."
    },
    "api_interface": {
      "name": "API Interface",
      "description": "A well-defined API is key to a system's ability to scale. The 'Architectural Overhead' penalty is reduced by 50%."
    },
    "efficiency_starter": {
      "name": "Efficiency School Starter",
      "description": "Unlocks the Efficiency School. This school focuses on early burst and late-game potential conversion."
    },
    "pointer_arithmetic": {
      "name": "Pointer Arithmetic",
      "description": "'Variables' and 'Functions' production gain a direct x10 multiplicative bonus."
    },
    "memory_management": {
      "name": "Memory Management",
      "description": "Resource Branch: All generator base costs are reduced by 20%, but cost growth rate increases by 0.01."
    },
    "supply_chain_optimization": {
      "name": "Supply Chain Optimization",
      "description": "You've optimized the entire software supply chain, making upstream production more efficient. 5% of 'Module' (Tier 4 generator) production is directly converted into 'Class' (Tier 3 generator)."
    },
    "bit_manipulation": {
      "name": "Bit Manipulation",
      "description": "Power Branch: Provides a x1.5 global CP output multiplier."
    },
    "assembly_instruction": {
      "name": "Assembly Instruction",
      "description": "Power Branch Ultimate Skill: Total CP output gains a permanent bonus equal to the square of your 'Code Refactor' count."
    },
    "compiler_optimization": {
      "name": "Compiler Optimization",
      "description": "Cross-Domain Synergy: RP bonus effect is quadratically enhanced by 'Buy Ten Reward' levels."
    },
    "abstraction_starter": {
      "name": "Abstraction School Starter",
      "description": "Unlocks the Abstraction School. This school focuses on late-game growth and powerful synergy effects."
    },
    "design_patterns": {
      "name": "Design Patterns",
      "description": "'Class', 'Module', and 'Library' production gain an additional multiplicative bonus based on the quantity of their next-tier generator."
    },
    "polymorphism": {
      "name": "Polymorphism",
      "description": "Cascade Branch: The 'Buy Ten Reward' effect of each generator additionally applies 20% to its previous tier generator."
    },
    "enterprise_architecture": {
      "name": "Enterprise Architecture",
      "description": "Cascade Branch Ultimate Skill: 'Version' effect gained from 'Compile & Release' is increased by 50%."
    },
    "dependency_injection": {
      "name": "Dependency Injection",
      "description": "Automation Branch: Unlocks automatic purchasing for all generators, regardless of 'Version' requirements."
    },
    "continuous_integration": {
      "name": "Continuous Integration",
      "description": "Automation Branch Ultimate Skill: Your 'Automated Purchasers' now prioritize buying generators that trigger 'Buy Ten Rewards'."
    },
    "agility_starter": {
      "name": "Agility School Starter",
      "description": "Unlocks the Agility School. This school focuses on accelerating game loops and improving reset efficiency."
    },
    "dynamic_typing": {
      "name": "Dynamic Typing",
      "description": "Each time you purchase a generator, you immediately gain a free generator of the next lower tier."
    },
    "jit_compilation": {
      "name": "JIT Compilation",
      "description": "Value Branch: Base 'Code Elegance' (RP) bonus effect is increased by 25%."
    },
    "code_generation": {
      "name": "Code Generation",
      "description": "Cross-Domain Synergy: When manually 'Code Refactoring', all generator quantities are temporarily doubled for 10 seconds."
    },
    "refactoring_tools": {
      "name": "Refactoring Tools",
      "description": "Quantity Branch: Gain an additional 1 RP each time you 'Code Refactor'."
    },
    "metaprogramming": {
      "name": "Metaprogramming",
      "description": "Quantity Branch Ultimate Skill: RP gained from 'Code Refactoring' is increased by 20%."
    }
  },
  "singularity": {
    "confirmTitle": "Confirm Entering Singularity?",
    "description": "This will be the end of your current era. You will reset all Computing Power (CP) and generators, but will {keep} all Refactor Points (RP), Version numbers, and challenge progress, in exchange for powerful {sp} to start a new era.",
    "keepText": "keep",
    "spText": "Singularity Power (SP)",
    "irreversible": "This action cannot be reversed."
  },
  "paradigmModal": {
    "title": "Unlock new paradigm?",
    "info": "This will consume your Singularity Power (SP). This action cannot be undone before a refactor.",
    "cannotUnlock": "Cannot Unlock",
    "confirmUnlock": "Confirm Unlock",
    "ruleRestriction": "Rule Restriction",
    "exclusiveChoiceWarning": "Exclusive Choice Warning",
    "schoolLimitInfo": "You can only choose a maximum of two main schools (Efficiency, Abstraction, Agility) to develop.",
    "exclusiveChoiceInfo": "This skill is mutually exclusive with the [{conflictingParadigmName}] skill. After unlocking this skill, the other branch cannot be selected."
  }
}